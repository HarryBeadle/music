#!/usr/bin/python
import os
import sys
import subprocess

# Check for supported applications
applications = subprocess.check_output(
    "osascript -e \"tell application \\\"System Events\\\" to name of processes\"", shell=True).split(", ")
#if "Spotify" in applications:
#	application = "Spotify"
if "iTunes" in applications:
	application = "iTunes"
else:
	for app in applications:
		try:
			output = subprocess.check_output(
				"osascript -e \"tell application \"%s\" to if player state is playing then \"True\"\"" % app, shell=True)
		except:
			break
		if output == "True":
			application = app
			print True
			break
		print False

if len(sys.argv) == 1: 
	pass

# Pause
elif sys.argv[1] == "pause":
	print "Pausing %s." % application
	os.system("osascript -e 'tell application \"%s\" to pause';" % application)

# Play
elif sys.argv[1] == "play":
	print "Playing %s." % application
	os.system("osascript -e 'tell application \"%s\" to play';" % application)

# Next Track
elif sys.argv[1] == "next":
	if len(sys.argv) == 2: n = 1
	else: n = int(sys.argv[2])
	print "Skipping %i track(s) on %s." % (n, application)
	for i in range(n):
		os.system("osascript -e 'tell application \"%s\" to next track';" % application)

# Previous Track
elif sys.argv[1] == "previous":
	if len(sys.argv) == 2: n = 1
	else: n = int(sys.argv[2])
	print "Skipping back %i track(s) on %s." % (n, application)
	for i in range(n):
		os.system("osascript -e 'tell application \"%s\" to previous track';" % application)

# Volume
elif sys.argv[1] == "vol":
	if len(sys.argv) == 2:
		volume = subprocess.check_output(
            "osascript -so -e \"tell application %s to sound volume\"" % ("\\\"" + application + "\\\""), shell=True)[:-1]
		print "The volume of " + application + " is " + volume + "%."
	else:
		os.system("osascript -e \"tell application \\\"" + application + "\\\" to set sound volume to " + str(sys.argv[2]) + "\"")
		print "Set the volume of " + application + " to " + sys.argv[2] + "%."

song = subprocess.check_output(
    "osascript -so -e \"tell application %s to if player state is playing then name of current track\"" % ("\\\"" + application + "\\\""), shell=True)[:-1]
artist = subprocess.check_output(
    "osascript -so -e \"tell application %s to if player state is playing then artist of current track\"" % ("\\\"" + application + "\\\""), shell=True)[:-1]
print "Now Playing: " + song + " - " + artist